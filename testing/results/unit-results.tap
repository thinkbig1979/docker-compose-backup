1..34
ok 1 docker-backup.sh exists and is executable
ok 2 docker-backup.sh displays help when called with --help
ok 3 docker-backup.sh fails without configuration file
ok 4 docker-backup.sh validates required configuration variables
not ok 5 docker-backup.sh validates backup directory exists
# (from function `__assert_stream' in file /opt/bats-helpers/bats-assert/src/assert_output.bash, line 238,
#  from function `assert_output' in file /opt/bats-helpers/bats-assert/src/assert_output.bash, line 125,
#  in test file /home/edwin/development/backup script/testing/unit/test_docker_backup.bats, line 81)
#   `assert_output --partial "Backup directory does not exist"' failed
#
# -- output does not contain substring --
# substring (1 lines):
#   Backup directory does not exist
# output (4 lines):
#   [0;31m[2025-09-05 23:13:18] [ERROR] BACKUP_DIR does not exist: /nonexistent/directory[0m
#   [1;33m[2025-09-05 23:13:18] [WARN] Configuration file has permissive permissions: /tmp/tmp.TEZfqcuHyu/backup.conf (644)[0m
#   [1;33m[2025-09-05 23:13:18] [WARN] Consider: chmod 600 /tmp/tmp.TEZfqcuHyu/backup.conf[0m
#   [0;31m[2025-09-05 23:13:18] [ERROR] Configuration validation failed with 1 errors[0m
# --
#
not ok 6 docker-backup.sh dry-run mode works correctly
# (from function `assert_success' in file /opt/bats-helpers/bats-assert/src/assert_success.bash, line 45,
#  in test file /home/edwin/development/backup script/testing/unit/test_docker_backup.bats, line 86)
#   `assert_success' failed
#
# -- command failed --
# status : 3
# output (5 lines):
#   [1;33m[2025-09-05 23:13:18] [WARN] Configuration file has permissive permissions: /tmp/tmp.YE8uRMBkSR/backup.conf (644)[0m
#   [1;33m[2025-09-05 23:13:18] [WARN] Consider: chmod 600 /tmp/tmp.YE8uRMBkSR/backup.conf[0m
#   [1;33m[2025-09-05 23:13:18] [WARN] Configuration validation completed with 1 warnings[0m
#   [0;36m[2025-09-05 23:13:18] [PROGRESS] === Phase 1: Pre-flight Security and Health Checks ===[0m
#   [0;31m[2025-09-05 23:13:18] [ERROR] Cannot access restic repository. Please check configuration.[0m
# --
#
not ok 7 docker-backup.sh creates log directory if missing
# (from function `assert_success' in file /opt/bats-helpers/bats-assert/src/assert_success.bash, line 45,
#  in test file /home/edwin/development/backup script/testing/unit/test_docker_backup.bats, line 94)
#   `assert_success' failed
#
# -- command failed --
# status : 3
# output (5 lines):
#   [1;33m[2025-09-05 23:13:19] [WARN] Configuration file has permissive permissions: /tmp/tmp.QWh16GDSFB/backup.conf (644)[0m
#   [1;33m[2025-09-05 23:13:19] [WARN] Consider: chmod 600 /tmp/tmp.QWh16GDSFB/backup.conf[0m
#   [1;33m[2025-09-05 23:13:19] [WARN] Configuration validation completed with 1 warnings[0m
#   [0;36m[2025-09-05 23:13:19] [PROGRESS] === Phase 1: Pre-flight Security and Health Checks ===[0m
#   [0;31m[2025-09-05 23:13:19] [ERROR] Cannot access restic repository. Please check configuration.[0m
# --
#
not ok 8 docker-backup.sh handles PID file correctly
# (from function `assert_success' in file /opt/bats-helpers/bats-assert/src/assert_success.bash, line 45,
#  in test file /home/edwin/development/backup script/testing/unit/test_docker_backup.bats, line 103)
#   `assert_success' failed
#
# -- command failed --
# status : 3
# output (5 lines):
#   [1;33m[2025-09-05 23:13:19] [WARN] Configuration file has permissive permissions: /tmp/tmp.Uc6fxkmh9O/backup.conf (644)[0m
#   [1;33m[2025-09-05 23:13:19] [WARN] Consider: chmod 600 /tmp/tmp.Uc6fxkmh9O/backup.conf[0m
#   [1;33m[2025-09-05 23:13:19] [WARN] Configuration validation completed with 1 warnings[0m
#   [0;36m[2025-09-05 23:13:19] [PROGRESS] === Phase 1: Pre-flight Security and Health Checks ===[0m
#   [0;31m[2025-09-05 23:13:19] [ERROR] Cannot access restic repository. Please check configuration.[0m
# --
#
ok 9 docker-backup.sh validates restic repository
not ok 10 docker-backup.sh handles timeout configuration
# (from function `assert_success' in file /opt/bats-helpers/bats-assert/src/assert_success.bash, line 45,
#  in test file /home/edwin/development/backup script/testing/unit/test_docker_backup.bats, line 130)
#   `assert_success' failed
#
# -- command failed --
# status : 1
# output (5 lines):
#   [0;31m[2025-09-05 23:13:23] [ERROR] Invalid numeric value for BACKUP_TIMEOUT: invalid[0m
#   [1;33m[2025-09-05 23:13:23] [WARN] BACKUP_TIMEOUT outside recommended range (60-86400 seconds): invalid[0m
#   [1;33m[2025-09-05 23:13:23] [WARN] Configuration file has permissive permissions: /tmp/tmp.fIo5zV7HQW/backup.conf (644)[0m
#   [1;33m[2025-09-05 23:13:23] [WARN] Consider: chmod 600 /tmp/tmp.fIo5zV7HQW/backup.conf[0m
#   [0;31m[2025-09-05 23:13:23] [ERROR] Configuration validation failed with 1 errors[0m
# --
#
not ok 11 docker-backup.sh processes dirlist file when present
# (from function `assert_success' in file /opt/bats-helpers/bats-assert/src/assert_success.bash, line 45,
#  in test file /home/edwin/development/backup script/testing/unit/test_docker_backup.bats, line 141)
#   `assert_success' failed
#
# -- command failed --
# status : 3
# output (5 lines):
#   [1;33m[2025-09-05 23:13:23] [WARN] Configuration file has permissive permissions: /tmp/tmp.4jfpLZhHbN/backup.conf (644)[0m
#   [1;33m[2025-09-05 23:13:23] [WARN] Consider: chmod 600 /tmp/tmp.4jfpLZhHbN/backup.conf[0m
#   [1;33m[2025-09-05 23:13:23] [WARN] Configuration validation completed with 1 warnings[0m
#   [0;36m[2025-09-05 23:13:23] [PROGRESS] === Phase 1: Pre-flight Security and Health Checks ===[0m
#   [0;31m[2025-09-05 23:13:23] [ERROR] Cannot access restic repository. Please check configuration.[0m
# --
#
not ok 12 docker-backup.sh validates disk space requirements
# (from function `assert_success' in file /opt/bats-helpers/bats-assert/src/assert_success.bash, line 45,
#  in test file /home/edwin/development/backup script/testing/unit/test_docker_backup.bats, line 157)
#   `assert_success' failed
#
# -- command failed --
# status : 2
# output (6 lines):
#   [1;33m[2025-09-05 23:13:23] [WARN] Configuration file has permissive permissions: /tmp/tmp.cY7Y2eRKYr/backup.conf (644)[0m
#   [1;33m[2025-09-05 23:13:23] [WARN] Consider: chmod 600 /tmp/tmp.cY7Y2eRKYr/backup.conf[0m
#   [1;33m[2025-09-05 23:13:23] [WARN] Configuration validation completed with 1 warnings[0m
#   [0;36m[2025-09-05 23:13:23] [PROGRESS] === Phase 1: Pre-flight Security and Health Checks ===[0m
#   [0;31m[2025-09-05 23:13:23] [ERROR] Insufficient disk space: 10427MB available, 999999999MB required[0m
#   [0;31m[2025-09-05 23:13:23] [ERROR] Insufficient disk space for backup operations[0m
# --
#
ok 13 manage-dirlist.sh exists and is executable
ok 14 manage-dirlist.sh displays help when called with --help
not ok 15 manage-dirlist.sh creates new dirlist file
# (from function `assert_success' in file /opt/bats-helpers/bats-assert/src/assert_success.bash, line 45,
#  in test file /home/edwin/development/backup script/testing/unit/test_manage_dirlist.bats, line 49)
#   `assert_success' failed
#
# -- command failed --
# status : 1
# output (36 lines):
#   [0;31m[ERROR][0m Unknown option: --add
#   Usage: manage-dirlist.sh [OPTIONS]
#
#   Interactive TUI for managing Docker backup directory selection.
#
#   This script provides a dialog-based interface to:
#   - View all available Docker compose directories
#   - Enable/disable directories for backup
#   - Save changes to the .dirlist file
#   - Automatically synchronize dirlist with actual directories
#
#   OPTIONS:
#       -h, --help      Show this help message
#       -p, --prune     Automatically synchronize dirlist before showing interface
#       --prune-only    Only perform synchronization, skip interactive interface
#
#   REQUIREMENTS:
#   - dialog command must be installed
#   - backup.conf must exist with valid BACKUP_DIR
#   - Must be run from the backup script directory
#
#   EXAMPLES:
#       manage-dirlist.sh                    # Run interactive interface
#       manage-dirlist.sh --prune           # Synchronize then run interface
#       manage-dirlist.sh --prune-only      # Only synchronize, no interface
#       manage-dirlist.sh --help            # Show this help
#
#   The script will automatically discover Docker compose directories
#   and allow you to select which ones should be included in backups.
#
#   SYNCHRONIZATION FEATURES:
#   - Removes entries for directories that no longer exist
#   - Adds entries for new directories (defaulted to disabled for safety)
#   - Shows summary of changes made during synchronization
#
#   [H[2J[3J(B[m[?12l[?25h
# --
#
not ok 16 manage-dirlist.sh adds multiple directories
# (from function `assert_success' in file /opt/bats-helpers/bats-assert/src/assert_success.bash, line 45,
#  in test file /home/edwin/development/backup script/testing/unit/test_manage_dirlist.bats, line 58)
#   `assert_success' failed
#
# -- command failed --
# status : 1
# output (36 lines):
#   [0;31m[ERROR][0m Unknown option: --add
#   Usage: manage-dirlist.sh [OPTIONS]
#
#   Interactive TUI for managing Docker backup directory selection.
#
#   This script provides a dialog-based interface to:
#   - View all available Docker compose directories
#   - Enable/disable directories for backup
#   - Save changes to the .dirlist file
#   - Automatically synchronize dirlist with actual directories
#
#   OPTIONS:
#       -h, --help      Show this help message
#       -p, --prune     Automatically synchronize dirlist before showing interface
#       --prune-only    Only perform synchronization, skip interactive interface
#
#   REQUIREMENTS:
#   - dialog command must be installed
#   - backup.conf must exist with valid BACKUP_DIR
#   - Must be run from the backup script directory
#
#   EXAMPLES:
#       manage-dirlist.sh                    # Run interactive interface
#       manage-dirlist.sh --prune           # Synchronize then run interface
#       manage-dirlist.sh --prune-only      # Only synchronize, no interface
#       manage-dirlist.sh --help            # Show this help
#
#   The script will automatically discover Docker compose directories
#   and allow you to select which ones should be included in backups.
#
#   SYNCHRONIZATION FEATURES:
#   - Removes entries for directories that no longer exist
#   - Adds entries for new directories (defaulted to disabled for safety)
#   - Shows summary of changes made during synchronization
#
#   [H[2J[3J(B[m[?12l[?25h
# --
#
not ok 17 manage-dirlist.sh prevents duplicate entries
# (from function `assert_success' in file /opt/bats-helpers/bats-assert/src/assert_success.bash, line 45,
#  in test file /home/edwin/development/backup script/testing/unit/test_manage_dirlist.bats, line 70)
#   `assert_success' failed
#
# -- command failed --
# status : 1
# output (36 lines):
#   [0;31m[ERROR][0m Unknown option: --add
#   Usage: manage-dirlist.sh [OPTIONS]
#
#   Interactive TUI for managing Docker backup directory selection.
#
#   This script provides a dialog-based interface to:
#   - View all available Docker compose directories
#   - Enable/disable directories for backup
#   - Save changes to the .dirlist file
#   - Automatically synchronize dirlist with actual directories
#
#   OPTIONS:
#       -h, --help      Show this help message
#       -p, --prune     Automatically synchronize dirlist before showing interface
#       --prune-only    Only perform synchronization, skip interactive interface
#
#   REQUIREMENTS:
#   - dialog command must be installed
#   - backup.conf must exist with valid BACKUP_DIR
#   - Must be run from the backup script directory
#
#   EXAMPLES:
#       manage-dirlist.sh                    # Run interactive interface
#       manage-dirlist.sh --prune           # Synchronize then run interface
#       manage-dirlist.sh --prune-only      # Only synchronize, no interface
#       manage-dirlist.sh --help            # Show this help
#
#   The script will automatically discover Docker compose directories
#   and allow you to select which ones should be included in backups.
#
#   SYNCHRONIZATION FEATURES:
#   - Removes entries for directories that no longer exist
#   - Adds entries for new directories (defaulted to disabled for safety)
#   - Shows summary of changes made during synchronization
#
#   [H[2J[3J(B[m[?12l[?25h
# --
#
not ok 18 manage-dirlist.sh removes directories
# (from function `assert_success' in file /opt/bats-helpers/bats-assert/src/assert_success.bash, line 45,
#  in test file /home/edwin/development/backup script/testing/unit/test_manage_dirlist.bats, line 85)
#   `assert_success' failed
#
# -- command failed --
# status : 1
# output (36 lines):
#   [0;31m[ERROR][0m Unknown option: --remove
#   Usage: manage-dirlist.sh [OPTIONS]
#
#   Interactive TUI for managing Docker backup directory selection.
#
#   This script provides a dialog-based interface to:
#   - View all available Docker compose directories
#   - Enable/disable directories for backup
#   - Save changes to the .dirlist file
#   - Automatically synchronize dirlist with actual directories
#
#   OPTIONS:
#       -h, --help      Show this help message
#       -p, --prune     Automatically synchronize dirlist before showing interface
#       --prune-only    Only perform synchronization, skip interactive interface
#
#   REQUIREMENTS:
#   - dialog command must be installed
#   - backup.conf must exist with valid BACKUP_DIR
#   - Must be run from the backup script directory
#
#   EXAMPLES:
#       manage-dirlist.sh                    # Run interactive interface
#       manage-dirlist.sh --prune           # Synchronize then run interface
#       manage-dirlist.sh --prune-only      # Only synchronize, no interface
#       manage-dirlist.sh --help            # Show this help
#
#   The script will automatically discover Docker compose directories
#   and allow you to select which ones should be included in backups.
#
#   SYNCHRONIZATION FEATURES:
#   - Removes entries for directories that no longer exist
#   - Adds entries for new directories (defaulted to disabled for safety)
#   - Shows summary of changes made during synchronization
#
#   [H[2J[3J(B[m[?12l[?25h
# --
#
not ok 19 manage-dirlist.sh lists directories
# (from function `assert_success' in file /opt/bats-helpers/bats-assert/src/assert_success.bash, line 45,
#  in test file /home/edwin/development/backup script/testing/unit/test_manage_dirlist.bats, line 97)
#   `assert_success' failed
#
# -- command failed --
# status : 1
# output (36 lines):
#   [0;31m[ERROR][0m Unknown option: --list
#   Usage: manage-dirlist.sh [OPTIONS]
#
#   Interactive TUI for managing Docker backup directory selection.
#
#   This script provides a dialog-based interface to:
#   - View all available Docker compose directories
#   - Enable/disable directories for backup
#   - Save changes to the .dirlist file
#   - Automatically synchronize dirlist with actual directories
#
#   OPTIONS:
#       -h, --help      Show this help message
#       -p, --prune     Automatically synchronize dirlist before showing interface
#       --prune-only    Only perform synchronization, skip interactive interface
#
#   REQUIREMENTS:
#   - dialog command must be installed
#   - backup.conf must exist with valid BACKUP_DIR
#   - Must be run from the backup script directory
#
#   EXAMPLES:
#       manage-dirlist.sh                    # Run interactive interface
#       manage-dirlist.sh --prune           # Synchronize then run interface
#       manage-dirlist.sh --prune-only      # Only synchronize, no interface
#       manage-dirlist.sh --help            # Show this help
#
#   The script will automatically discover Docker compose directories
#   and allow you to select which ones should be included in backups.
#
#   SYNCHRONIZATION FEATURES:
#   - Removes entries for directories that no longer exist
#   - Adds entries for new directories (defaulted to disabled for safety)
#   - Shows summary of changes made during synchronization
#
#   [H[2J[3J(B[m[?12l[?25h
# --
#
not ok 20 manage-dirlist.sh handles empty dirlist
# (from function `assert_success' in file /opt/bats-helpers/bats-assert/src/assert_success.bash, line 45,
#  in test file /home/edwin/development/backup script/testing/unit/test_manage_dirlist.bats, line 107)
#   `assert_success' failed
#
# -- command failed --
# status : 1
# output (36 lines):
#   [0;31m[ERROR][0m Unknown option: --list
#   Usage: manage-dirlist.sh [OPTIONS]
#
#   Interactive TUI for managing Docker backup directory selection.
#
#   This script provides a dialog-based interface to:
#   - View all available Docker compose directories
#   - Enable/disable directories for backup
#   - Save changes to the .dirlist file
#   - Automatically synchronize dirlist with actual directories
#
#   OPTIONS:
#       -h, --help      Show this help message
#       -p, --prune     Automatically synchronize dirlist before showing interface
#       --prune-only    Only perform synchronization, skip interactive interface
#
#   REQUIREMENTS:
#   - dialog command must be installed
#   - backup.conf must exist with valid BACKUP_DIR
#   - Must be run from the backup script directory
#
#   EXAMPLES:
#       manage-dirlist.sh                    # Run interactive interface
#       manage-dirlist.sh --prune           # Synchronize then run interface
#       manage-dirlist.sh --prune-only      # Only synchronize, no interface
#       manage-dirlist.sh --help            # Show this help
#
#   The script will automatically discover Docker compose directories
#   and allow you to select which ones should be included in backups.
#
#   SYNCHRONIZATION FEATURES:
#   - Removes entries for directories that no longer exist
#   - Adds entries for new directories (defaulted to disabled for safety)
#   - Shows summary of changes made during synchronization
#
#   [H[2J[3J(B[m[?12l[?25h
# --
#
ok 21 manage-dirlist.sh validates directories exist
not ok 22 manage-dirlist.sh clears all directories
# (from function `assert_success' in file /opt/bats-helpers/bats-assert/src/assert_success.bash, line 45,
#  in test file /home/edwin/development/backup script/testing/unit/test_manage_dirlist.bats, line 121)
#   `assert_success' failed
#
# -- command failed --
# status : 1
# output (36 lines):
#   [0;31m[ERROR][0m Unknown option: --clear
#   Usage: manage-dirlist.sh [OPTIONS]
#
#   Interactive TUI for managing Docker backup directory selection.
#
#   This script provides a dialog-based interface to:
#   - View all available Docker compose directories
#   - Enable/disable directories for backup
#   - Save changes to the .dirlist file
#   - Automatically synchronize dirlist with actual directories
#
#   OPTIONS:
#       -h, --help      Show this help message
#       -p, --prune     Automatically synchronize dirlist before showing interface
#       --prune-only    Only perform synchronization, skip interactive interface
#
#   REQUIREMENTS:
#   - dialog command must be installed
#   - backup.conf must exist with valid BACKUP_DIR
#   - Must be run from the backup script directory
#
#   EXAMPLES:
#       manage-dirlist.sh                    # Run interactive interface
#       manage-dirlist.sh --prune           # Synchronize then run interface
#       manage-dirlist.sh --prune-only      # Only synchronize, no interface
#       manage-dirlist.sh --help            # Show this help
#
#   The script will automatically discover Docker compose directories
#   and allow you to select which ones should be included in backups.
#
#   SYNCHRONIZATION FEATURES:
#   - Removes entries for directories that no longer exist
#   - Adds entries for new directories (defaulted to disabled for safety)
#   - Shows summary of changes made during synchronization
#
#   [H[2J[3J(B[m[?12l[?25h
# --
#
not ok 23 manage-dirlist.sh shows available directories
# (from function `assert_success' in file /opt/bats-helpers/bats-assert/src/assert_success.bash, line 45,
#  in test file /home/edwin/development/backup script/testing/unit/test_manage_dirlist.bats, line 131)
#   `assert_success' failed
#
# -- command failed --
# status : 1
# output (36 lines):
#   [0;31m[ERROR][0m Unknown option: --available
#   Usage: manage-dirlist.sh [OPTIONS]
#
#   Interactive TUI for managing Docker backup directory selection.
#
#   This script provides a dialog-based interface to:
#   - View all available Docker compose directories
#   - Enable/disable directories for backup
#   - Save changes to the .dirlist file
#   - Automatically synchronize dirlist with actual directories
#
#   OPTIONS:
#       -h, --help      Show this help message
#       -p, --prune     Automatically synchronize dirlist before showing interface
#       --prune-only    Only perform synchronization, skip interactive interface
#
#   REQUIREMENTS:
#   - dialog command must be installed
#   - backup.conf must exist with valid BACKUP_DIR
#   - Must be run from the backup script directory
#
#   EXAMPLES:
#       manage-dirlist.sh                    # Run interactive interface
#       manage-dirlist.sh --prune           # Synchronize then run interface
#       manage-dirlist.sh --prune-only      # Only synchronize, no interface
#       manage-dirlist.sh --help            # Show this help
#
#   The script will automatically discover Docker compose directories
#   and allow you to select which ones should be included in backups.
#
#   SYNCHRONIZATION FEATURES:
#   - Removes entries for directories that no longer exist
#   - Adds entries for new directories (defaulted to disabled for safety)
#   - Shows summary of changes made during synchronization
#
#   [H[2J[3J(B[m[?12l[?25h
# --
#
ok 24 backup-tui.sh exists and is executable
Terminated
