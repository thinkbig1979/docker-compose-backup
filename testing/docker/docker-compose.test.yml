# Docker Compose Configuration for Backup Script Testing
# Provides isolated test environments with source/destination simulation

version: '3.8'

services:
  # Test source container with sample Docker stacks
  backup-source:
    image: docker:24-dind
    container_name: backup-test-source
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    volumes:
      - docker-certs-source:/certs/client
      - docker-data-source:/var/lib/docker
      - ./fixtures/docker-stacks:/opt/docker-stacks:ro
      - ./fixtures/test-data:/test-data
    networks:
      - backup-test-net
    command: dockerd-entrypoint.sh --host=tcp://0.0.0.0:2376 --tls=false
    healthcheck:
      test: ["CMD", "docker", "version"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Restic repository server (for testing backup destinations)
  restic-server:
    image: restic/rest-server:latest
    container_name: backup-test-restic
    ports:
      - "8000:8000"
    volumes:
      - restic-data:/data
      - ./fixtures/restic-config:/config:ro
    environment:
      - OPTIONS=--no-auth
    networks:
      - backup-test-net
    command: --path /data --listen :8000 --no-auth
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # S3 compatible storage (Minio) for cloud sync testing
  minio:
    image: minio/minio:latest
    container_name: backup-test-s3
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    environment:
      - MINIO_ROOT_USER=testuser
      - MINIO_ROOT_PASSWORD=testpass123
    networks:
      - backup-test-net
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Test runner container
  backup-test-runner:
    build:
      context: .
      dockerfile: test-runner.Dockerfile
    container_name: backup-test-runner
    depends_on:
      backup-source:
        condition: service_healthy
      restic-server:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ../:/workspace
      - docker-certs-source:/docker-certs
      - ./fixtures:/test-fixtures:ro
      - test-results:/test-results
    environment:
      - DOCKER_HOST=tcp://backup-source:2376
      - RESTIC_REPOSITORY=http://restic-server:8000/test-repo
      - RESTIC_PASSWORD=test-password
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=testuser
      - S3_SECRET_KEY=testpass123
      - TEST_MODE=true
    networks:
      - backup-test-net
    working_dir: /workspace
    command: tail -f /dev/null

  # Network simulation container for testing network failures
  network-chaos:
    image: gaiaadm/pumba:latest
    container_name: backup-test-chaos
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - backup-test-net
    command: --log-level info netem --duration 30s delay --time 1000 backup-test-restic
    profiles:
      - chaos

  # Resource-constrained test environment
  resource-limited:
    image: ubuntu:22.04
    container_name: backup-test-limited
    mem_limit: 128m
    cpus: 0.5
    volumes:
      - ../:/workspace:ro
      - limited-storage:/limited-space:rw,size=100m
    environment:
      - BACKUP_DIR=/limited-space
    networks:
      - backup-test-net
    command: tail -f /dev/null
    profiles:
      - resource-tests

volumes:
  docker-certs-source:
  docker-data-source:
  restic-data:
  minio-data:
  test-results:
  limited-storage:

networks:
  backup-test-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16